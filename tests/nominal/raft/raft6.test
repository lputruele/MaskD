Enum MSG = {null, accept, entry};
Enum ENTRYSTATE = {uncommitted, committed};


Global lToF1,lToF2,lToF3,lToF4,lToF5 : MSG;


Process Leader{
	command: ENTRYSTATE;
	Initial: lToF1 == null && lToF2 == null && lToF3 == null && lToF4 == null && lToF5 == null && command == uncommitted;
	Normative: true;
		[sendEntry1] lToF1 == null && command == uncommitted -> lToF1 = entry;
		[sendEntry2] lToF2 == null && command == uncommitted -> lToF2 = entry;
		[sendEntry3] lToF3 == null && command == uncommitted -> lToF3 = entry;
		[sendEntry4] lToF4 == null && command == uncommitted -> lToF4 = entry;
		[sendEntry5] lToF5 == null && command == uncommitted -> lToF5 = entry;
		//[sendEntry1] lToF1 == accept -> lToF1 = accept;
		//[sendEntry2] lToF2 == accept -> lToF2 = accept;
		//[sendEntry3] lToF3 == accept -> lToF3 = accept;
		//[sendEntry4] lToF4 == accept -> lToF4 = accept;
		[commitEntry] (lToF1 == accept && lToF2 == accept && lToF3 == accept) || (lToF1 == accept && lToF3 == accept && lToF4 == accept) || (lToF3 == accept && lToF2 == accept && lToF4 == accept) || (lToF1 == accept && lToF2 == accept && lToF4 == accept) || (lToF1 == accept && lToF2 == accept && lToF5 == accept) || (lToF1 == accept && lToF3 == accept && lToF5 == accept) || (lToF1 == accept && lToF4 == accept && lToF5 == accept) || (lToF2 == accept && lToF3 == accept && lToF5 == accept) || (lToF3 == accept && lToF4 == accept && lToF5 == accept) || (lToF3 == accept && lToF4 == accept && lToF5 == accept) && command == uncommitted -> command = committed, lToF1 = null, lToF2 = null, lToF3 = null, lToF4 = null, lToF5 = null;
}

Process Follower(recChan : MSG){
	Initial:  lToF1 == null && lToF2 == null && lToF3 == null && lToF4 == null && lToF5 == null;
	Normative: true;
		[receiveEntry] recChan == entry -> recChan = accept;
		[rejectEntry] recChan == entry -> recChan = null;
}



Main(){
    leader:Leader;
    f1:Follower;
    f2:Follower;
    f3:Follower;
    f4:Follower;
    f5:Follower;
    run leader();
    run f1(lToF1);
    run f2(lToF2);
    run f3(lToF3);
    run f4(lToF4);
    run f5(lToF5);
}